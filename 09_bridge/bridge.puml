@startuml
'https://plantuml.com/class-diagram

object main
note top of main
IDisplay.DisplaySth()
CountDisplay.MultiDisplaySth()
end note
interface IDisplay {
    {abstract}DisplaySth()
}
package 桥接 <<rectangle>> {
    abstract class Display {
        impl DisplayImpl
        Open()
        Print()
        Close()
        DisplaySth()
    }
    note left of Display::Open
    impl.RawOpen()
    end note
    note left of Display::Print
    impl.RawPrint()
    end note
    note left of Display::Close
    impl.RawClose()
    end note
    note left of Display::DisplaySth
    Open()
    Print()
    Close()
    end note
    interface DisplayImpl {
        {abstract}RawOpen()
        {abstract}RawPrint()
        {abstract}RawClose()
    }
}
abstract class CountDisplay {
    Display
    MultiDisplaySth()
}
note left of CountDisplay::MultiDisplay
    Open()
    n * Print()
    Close()
end note
class StringDisplayImpl {
    RawOpen()
    RawPrint()
    RawClose()
}

main -> IDisplay: Uses >
main --> CountDisplay: Uses >
IDisplay <|.. Display
Display o-> DisplayImpl
Display <|-- CountDisplay
note on link: 匿名组合实现继承
DisplayImpl <|.. StringDisplayImpl

@enduml